<%-include('../partials/admin/adminHeader')%>
<%-include('../partials/admin/adminSideNav')%>



<!-- crop-->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.js"></script>

<div id="page-content-wrapper">
    <nav class="navbar navbar-expand-lg bg-light">
        <div class="container-fluid">
<h2>Add Catagory</h2>

            
            <form action="/admin/addCatagory" method="post" enctype="multipart/form-data">
                <!-- 2 column grid layout with text inputs for the first and last names -->
                <div class="row mb-2">
                  <div class="col">
                    <div class="form-outline mb-2">
                      <label class="form-label" for="catagoryName">Catagory Name</label>
                      <input type="text" id="catagoryName" placeholder="Name" name="name" class="form-control" required="true" value=""/>
                    </div>
                  </div>
                  
              
                <!-- Text input -->
                <div class="form-outline mb-2">
                  <label class="form-label" for="CatagoryImage">Image</label>
                  <input type="file" id="catagoryImage" class="form-control"  name="image" required="true"  />
                </div>

                  <!-- <div id="image-box1" class="image-container"></div>
                  <div class="d-flex justify-content-end">
                  <a class="btn btn-sm btn-primary ms-3" id="crop-btn1" style=" margin-top: 10px; display: none;">Crop</a>
                  
                
                    <a href="/admin/categories/addcategory" class="btn btn-sm btn-danger  ms-3" id="cancel-crop" style=" margin-top: 10px; display: none;">Cancel</a>
                   
                  </div> -->

                  <div class="form-outline mb-2">
                    <label for="Offer Input mb-1">Offer</label>
                        <input type="number" class="form-control text-black" name="catagoryOffer"
                          placeholder="Offer in Percentage" aria-describedby="offerHelp" min="1" max="100">

                  </div>  
              
    
              
                <!-- Submit button -->
                <button type="submit" class="btn btn-success btn-block my-4">Submit</button>
              </form>
        </div>
    </nav>
</div>
<!-- /#page-content-wrapper -->
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js"
integrity="sha384-u1OknCvxWvY5kfmNBILK2hRnQC3Pr17a+RTT6rIHI7NnikvbZlHgTPOOmMi466C8"
crossorigin="anonymous"></script>


<script>

 const imagebox1 = document.getElementById('image-box1')
    const crop_btn1 = document.getElementById('crop-btn1')
    const input1 = document.getElementById('catagoryImage')
    
    // When user uploads the image this event will get triggered
    input1.addEventListener('change', () => {
      // if(imageError.innerHTML=="Image is valid"){
      // Getting image file object from the input variable
      const img_data1 = input1.files[0]
      // createObjectURL() static method creates a DOMString containing a URL representing the object given in the parameter.
      // The new object URL represents the specified File object or Blob object.
      const url1 = URL.createObjectURL(img_data1)
      // Creating a image tag inside imagebox which will hold the cropping view image(uploaded file) to it using the url created before.
      imagebox1.innerHTML = `<img src="${url1}" id="image1" style="width:50%;">`
      // Storing that cropping view image in a variable
      const image = document.getElementById('image')
      // Displaying the image box
      document.getElementById('image-box1').style.display = 'block'
      // Displaying the Crop buttton
      document.getElementById('crop-btn1').style.display = 'block'
      document.getElementById('cancel-crop').style.display = 'block'
      // Hiding the Post button
      const cropper1 = new Cropper(image1, {
        autoCropArea: 1,
        viewMode: 1,
        scalable: false,
        zoomable: false,
        movable: false,
        minCropBoxWidth: 50,
        minCropBoxHeight: 50,
      })
      // When crop button is clicked this event will get triggered
      crop_btn1.addEventListener('click', () => {
        // This method coverts the selected cropped image on the cropper canvas into a blob object
        cropper1.getCroppedCanvas().toBlob((blob) => {
          // Gets the original image data
          let fileInputElement1 = document.getElementById('catagoryImage');
          // Make a new cropped image file using that blob object, image_data.name will make the new file name same as original image
          let file1 = new File([blob], img_data1.name, { type: "image/*", lastModified: new Date().getTime() });
          // Create a new container
          let container1 = new DataTransfer();
          // Add the cropped image file to the container
          container1.items.add(file1);
          // Replace the original image file with the new cropped image file
          fileInputElement1.files = container1.files;
          // document.getElementById('imgView1').src = URL.createObjectURL(fileInputElement1.files[0])
          // Hide the cropper box
          document.getElementById('image-box1').style.display = 'none'
          // Hide the crop button
          document.getElementById('crop-btn1').style.display = 'none'
          document.getElementById('cancel-crop').style.display = 'none'
  
  
        })
      })
    }
  ) 
</script>


</body>

</html>